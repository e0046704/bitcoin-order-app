name: "sast-scan"
 
on:
  push:
    branches: [main, develop, githubcicd]
  pull_request:
    branches: [main, develop]
 
jobs:
  test:
    runs-on: ubuntu-latest
 
    strategy:
      matrix:
        node-version: [20.x] # Updated to current LTS
 
    steps:
      - uses: actions/checkout@v4 # Updated to v4
 
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
 
      - name: Cache node modules
        uses: actions/cache@v3
        id: cache-nodemodules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
 
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci --legacy-peer-deps
 
      - name: OWASP Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.2.0/dependency-check-7.2.0-release.zip
          unzip dependency-check-7.2.0-release.zip
 
      - name: Run scan with ODC
        run: |
          dependency-check/bin/dependency-check.sh --project "bitcoin" --scan . --format XML --out odc-report.xml || true
          # Also create a text report for easier reading
          dependency-check/bin/dependency-check.sh --project "bitcoin" --scan . > ODC-report || true
 
      - name: Check for critical vulnerabilities
        run: |
          if grep -q "CRITICAL" ./ODC-report; then
            echo "Critical vulnerabilities found"
            grep "CRITICAL" ./ODC-report
            exit 1
          fi
 
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4 # Updated to v4
        with:
          name: sast-report
          path: |
            ./ODC-report
            ./odc-report.xml
 
 